const handler = async (m, { isOwner, isAdmin, conn, text, participants, args }) => {
    // Verificaci√≥n de permisos
    if (!(isAdmin || isOwner)) {
        global.dfail('admin', m, conn);
        throw false;
    }

    // Configuraci√≥n inicial
    const chat = global.db.data.chats[m.chat];
    const emoji = chat.emojiTag || '‚îÉ';
    const groupMetadata = await conn.groupMetadata(m.chat);
    const groupName = groupMetadata.subject;
    const memberCount = participants.length;
    const customMessage = args.join(' ') || '';

    // Mapeo de banderas por c√≥digo de pa√≠s
    const countryFlags = {
        '33': 'üá´üá∑', '63': 'üáµüá≠', '599': 'üáßüá∂', '52': 'üá≤üáΩ', 
        '57': 'üá®üá¥', '54': 'üá¶üá∑', '34': 'üá™üá∏', '55': 'üáßüá∑', 
        '1': 'üá∫üá∏', '44': 'üá¨üáß', '91': 'üáÆüá≥', '502': 'üá¨üáπ', 
        '56': 'üá®üá±', '51': 'üáµüá™', '58': 'üáªüá™', '505': 'üá≥üáÆ', 
        '593': 'üá™üá®', '504': 'üá≠üá≥', '591': 'üáßüá¥', '53': 'üá®üá∫', 
        '503': 'üá∏üáª', '507': 'üáµüá¶', '595': 'üáµüáæ'
    };

    // Funci√≥n para obtener bandera seg√∫n el ID
    const getCountryFlag = (id) => {
        const phoneNumber = id.split('@')[0];
        let phonePrefix = phoneNumber.slice(0, 3);
        
        if (phoneNumber.startsWith('1')) return 'üá∫üá∏';
        if (!countryFlags[phonePrefix]) phonePrefix = phoneNumber.slice(0, 2);
        
        return countryFlags[phonePrefix] || 'üè≥Ô∏è‚Äçüåà';
    };

    // Construcci√≥n del mensaje con formato
    let message = `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ ¬°ùóîùóñùóßùóúùó©ùóòùó°ùó¶ùóòùó°! ‰πÇ ‚îÅ‚îÅ‚îÅ‚îÅ‚ïÆ\n`;
    message += `${emoji} *üèÜ GRUPO:* ${groupName}\n`;
    message += `${emoji} *üë§ INTEGRANTES:* ${memberCount}\n\n`;
    
    // Agregar mensaje personalizado si existe
    if (customMessage) {
        message += `${emoji} *MENSAJE:* ${customMessage}\n\n`;
    }
    
    // Encabezado de menciones
    message += `${emoji} *MIEMBROS:*\n`;
    
    // Menciones horizontales (agrupadas de 5 en 5 para mejor visualizaci√≥n)
    let mentionsLine = '';
    participants.forEach((mem, index) => {
        const mention = `${getCountryFlag(mem.id)} @${mem.id.split('@')[0]}`;
        mentionsLine += mention + '  ';
        
        // Hacer salto de l√≠nea cada 5 menciones
        if ((index + 1) % 5 === 0) {
            message += mentionsLine + '\n';
            mentionsLine = '';
        }
    });
    
    // Agregar las menciones restantes
    if (mentionsLine.trim() !== '') {
        message += mentionsLine + '\n';
    }
    
    // Pie del mensaje
    message += `\n‚ï∞‚îÅ‚îÅ‚îÅ ùóòùóüùóúùóßùóò ùóïùó¢ùóß ùóöùóüùó¢ùóïùóîùóü ‚îÅ‚îÅ‚îÅ‚ïØ`;

    // Env√≠o del mensaje
    await conn.sendMessage(m.chat, {
        text: message,
        mentions: participants.map(a => a.id)
    });
};

// Configuraci√≥n del handler
handler.help = ['todos'];
handler.tags = ['group'];
handler.command = /^(tagal|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;
