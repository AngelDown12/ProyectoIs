const handler = async (m, { isOwner, isAdmin, conn, text, participants, args }) => {
  let chat = global.db.data.chats[m.chat],
      emoji = chat.emojiTag || '‚îÉ';

  if (!(isAdmin || isOwner)) {
    global.dfail('admin', m, conn);
    throw false;
  }

  const invis = String.fromCharCode(8206).repeat(4001); // Leer m√°s

  const pesan = args.join` `,
        groupMetadata = await conn.groupMetadata(m.chat),
        groupName = groupMetadata.subject;

  const countryFlags = { 
    '1': 'üá∫üá∏', '7': 'üá∑üá∫', '20': 'üá™üá¨', '27': 'üáøüá¶', '30': 'üá¨üá∑', '31': 'üá≥üá±', '32': 'üáßüá™', '33': 'üá´üá∑',
    '34': 'üá™üá∏', '36': 'üá≠üá∫', '39': 'üáÆüáπ', '40': 'üá∑üá¥', '41': 'üá®üá≠', '43': 'üá¶üáπ', '44': 'üá¨üáß', '45': 'üá©üá∞',
    '998': 'üá∫üáø'
  };

  const getCountryFlag = (id) => {
    const phoneNumber = id.split('@')[0];
    for (let length = 3; length >= 1; length--) {
      const prefix = phoneNumber.slice(0, length);
      if (countryFlags[prefix]) return countryFlags[prefix];
    }
    return 'üè≥Ô∏è‚Äçüåà'; // Default si no se encuentra
  };

  // Limitamos a los primeros 10 participantes
  const limitedParticipants = participants.slice(0, 10);
  let teks = `*‚ï≠‚îÅ* ùòºùòæùôèùôÑùôëùôÄùôâùôéùôÄùôâ ‰πÇ\n\n*${groupName}*\nüë§ ùôÑùôâùôèùôÄùôÇùôçùòºùôâùôèùôÄùôé: *${participants.length}*\n${pesan}\n${invis}`;

  for (const mem of limitedParticipants) {
    teks += `${emoji} ${getCountryFlag(mem.id)} @${mem.id.split('@')[0]}\n`;
  }

  // Si hay m√°s de 10 participantes, agregamos una nota de que hay m√°s
  if (participants.length > 10) {
    teks += `\n...y m√°s participantes`;
  }

  teks += `\n*‚ï∞‚îÅ* ùôÄùôáùôÑùôèùôÄ ùòΩùôäùôè ùôÇùôáùòºùòΩùôäùôá\n‚ñå‚îÇ‚ñà‚ïë‚ñå‚ïë‚ñå‚ïë‚ïë‚ñå‚ïë‚ñå‚ïë‚ñå‚ïë‚ñà`;

  await conn.sendMessage(m.chat, {
    text: teks,
    mentions: limitedParticipants.map((a) => a.id)
  });
};

handler.help = ['todos'];
handler.tags = ['group'];
handler.command = /^(tagal|invocar|marcar|todos|invocaci√≥n)$/i;
handler.admin = true;
handler.group = true;

export default handler;
